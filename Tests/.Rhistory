install.packages('freesurferformats ')
install.packages('freesurferformats')
library(freesurferformats)
setwd("~/Documents/GitHub/BayesFactorFMRI_Point_Null/Code")
test <- read.fs.mgh('../example_data/outlier_adjust_lh.area.fwhm10.preproc.mgh')
class(test)
test <- read.fs.mgh('../example_data/outlier_adjust_lh.area.fwhm10.preproc.mgh', with_header = T)
test <- read.fs.mgh('../example_data/outlier_adjust_lh.area.fwhm10.preproc.mgh', with_header = T, flatten = F)
test <- read.fs.mgh('../example_data/outlier_adjust_lh.area.fwhm10.preproc.mgh', with_header = F, flatten = F)
test <- read.fs.mgh('../example_data/outlier_adjust_lh.area.fwhm10.preproc.mgh', with_header = T, flatten = F)
library(BayesFactor)
test <- read.fs.mgh('../example_data/outlier_adjust_lh.area.fwhm10.preproc.mgh', with_header = F, flatten = F)
test[80000,1,1,1]
test[80000,1,1,2]
test[80000,1,1,3]
test[80000,1,1,4]
test[80000,1,1,5]
mean(test[80000,1,1,:])
mean(test[80000,1,1,])
sd(test[80000,1,1,])
sd(test[70000,1,1,])
mean(test[70000,1,1,])
mean(test[30000,1,1,])
mean(test[10000,1,1,])
mean(test[20000,1,1,])
mean(test[100000,1,1,])
mean(test[160000,1,1,])
mean(test[150000,1,1,])
mean(test[140000,1,1,])
load("~/Documents/Documents_loaner/Research/MEP_HLM/MEP_merged.RData")
library(psych)
library(lmerTest        )
library(optimx)
library(plyr)
Study3$age <- (as.Date('12/1/2019',format='%m/%d/%Y') - Study3$DOB)/365
#1/31/2021
describe(as.numeric(Study3$age))
load("~/Documents/Documents_loaner/Research/MEP_HLM/MEP_merged.RData")
#1/31/2021
describe(as.numeric(Study3$age))
Study3 <- rbind.fill(Study3_1,Study3_2)
Study3$DOB <- as.Date(Study3$Q148.1,format = '%m/%d/%y')
Study3[Study3$DOB > as.Date('1/24/2018','%m/%d/%Y'),'DOB'] <-
Study3[Study3$DOB > as.Date('1/24/2018','%m/%d/%Y'),'DOB'] -
36524
Study3$age <- (as.Date('12/1/2019',format='%m/%d/%Y') - Study3$DOB)/365
#1/31/2021
describe(as.numeric(Study3$age))
Study3$age <- (as.Date('12/1/2020',format='%m/%d/%Y') - Study3$DOB)/365
#1/31/2021
describe(as.numeric(Study3$age))
Study3$age <- (as.Date('12/1/2018',format='%m/%d/%Y') - Study3$DOB)/365
#1/31/2021
describe(as.numeric(Study3$age))
Study3$age <- (as.Date('12/31/2018',format='%m/%d/%Y') - Study3$DOB)/365
#1/31/2021
describe(as.numeric(Study3$age))
Study3$age <- (as.Date('1/31/2019',format='%m/%d/%Y') - Study3$DOB)/365
#1/31/2021
describe(as.numeric(Study3$age))
Study3$age <- (as.Date('2/31/2019',format='%m/%d/%Y') - Study3$DOB)/365
#1/31/2021
describe(as.numeric(Study3$age))
Study3$age <- (as.Date('2/28/2019',format='%m/%d/%Y') - Study3$DOB)/365
#1/31/2021
describe(as.numeric(Study3$age))
Study3$age <- (as.Date('3/15/2019',format='%m/%d/%Y') - Study3$DOB)/365
#1/31/2021
describe(as.numeric(Study3$age))
Study3$age <- (as.Date('3/31/2019',format='%m/%d/%Y') - Study3$DOB)/365
#1/31/2021
describe(as.numeric(Study3$age))
load("~/Documents/GitHub/COVIDiSTRESS2_Stress/Stress_aligned.RData")
table(data.filtered$residing_country)
test<-table(data.filtered$residing_country)
length(test)
length(table(data.filtered$residing_country))
label(test)
labels(test)
View(labels(test))
View(labels(test[[1]]))
View(labels(test)[[1]])
load("~/Documents/GitHub/COVIDiSTRESS2_Stress/R1/Big_Picture/big.pss.RData")
hypothesis(pss.2,'sps_identity>0')
library(brms)
hypothesis(pss.2,'sps_identity>0')
load("~/Documents/GitHub/COVIDiSTRESS2_Stress/R1/Big_Picture/big.res.RData")
# sps
hypothesis(pss.1,'pss_sps>0') #0.22      0.02     0.19     0.25        Inf         1    *
hypothesis(pss.1,'sps_identity>0')
# bf
bf.pss.2.0 <- bayes_factor(pss.2,pss.0,log=T)
load("~/Documents/GitHub/COVIDiSTRESS2_Stress/R1/Big_Picture/big.pss.RData")
# bf
bf.pss.2.0 <- bayes_factor(pss.2,pss.0,log=T)
bf.pss.2.0
# hypothesis testing
# primary
hypothesis(pss.2, 'pss_primary_stressor_avg >0') #0.14      0.02     0.11     0.17        Inf         1    *
model.mediator.f <- bf(sps ~  gender + education + work_location + age+
SSS_faml+ relationship_status)
model.pss.f <- bf(pss ~
gender + education + work_location + age+
SSS_faml+ relationship_status)
pss.f <- brms::brm( model.pss.f+model.mediator.f+set_rescor(F) ,
data=data.filtered, family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef)
bf.pss.2.f <- bayes_factor(pss.2,pss.f,log=T)
bf.pss.2.f
save.image("~/Documents/GitHub/COVIDiSTRESS2_Stress/R1/Big_Picture/big.pss.RData")
load("~/Documents/GitHub/COVIDiSTRESS2_Stress/R1/Big_Picture/big.res.RData")
bf.pss.1.0
model.mediator.f <- bf(sps ~ identity+ gender + education + work_location + age+
SSS_faml+ relationship_status
)
model.pss.f <- bf(pss ~ primary_stressor_avg + primary_stressor_avg*sps +
secondary*identity + secondary*sps +
gender + education + work_location + age+
SSS_faml+ relationship_status)
pss.f <- brms::brm(model.mediator.f + model.pss.f + set_rescor(F),
data=data.filtered, family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef)
bf.pss.1.0 <- bayes_factor(pss.1,pss.0,log=T)
bf.pss.1.2 <- bayes_factor(pss.1,pss.2,log=T)
bf.pss.1.2
bf.pss.1.f<- bayes_factor(pss.1,pss.f,log=T)
bf.pss.1.f
# bfs
bf.pss.1.0 <- bayes_factor(pss.1,pss.0,log=T)
model.mediator.0 <- bf(sps ~  gender + education + work_location + age+
SSS_faml+ relationship_status+
(1|residing_country))
model.pss.0 <- bf(pss ~
gender + education + work_location + age+
SSS_faml+ relationship_status+
(1|residing_country))
pss.0 <- brms::brm( model.pss.0+model.mediator.0+set_rescor(F) ,
data=data.filtered, family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef)
# bfs
bf.pss.1.0 <- bayes_factor(pss.1,pss.0,log=T)
bf.pss.1.0
save.image("~/Documents/GitHub/COVIDiSTRESS2_Stress/R1/Big_Picture/big.res.RData")
load("~/Documents/GitHub/COVIDiSTRESS2_Stress/R1/Big_Picture/big.pss.RData")
model.mediator.f <- bf(sps ~  identity+gender + education + work_location + age+
SSS_faml+ relationship_status)
model.pss.f <- bf(pss ~ primary_stressor_avg + primary_stressor_avg*sps +
secondary*identity + secondary*sps +
gender + education + work_location + age+
SSS_faml+ relationship_status)
pss.f <- brms::brm( model.pss.f+model.mediator.f+set_rescor(F) ,
data=data.filtered, family = gaussian(),
cores=4,chains=4, save_pars = save_pars(all = T),
sample_prior ='yes', seed=1660415,prior=prior.coef)
bf.pss.2.f <- bayes_factor(pss.2,pss.f,log=T)
bf.pss.2.f
save.image("~/Documents/GitHub/COVIDiSTRESS2_Stress/R1/Big_Picture/big.pss.RData")
library(rworldmap)
library(RColorBrewer)
sPDF <-getMap()
# create data
data_to_map <- matrix(nrow=nrow(countryRegions),ncol=1)
# for
for (i in 1:nrow(countryRegions)){
# check NA
if (is.na(countryRegions[i,'GEO3'])){
next
}
# start with Australia
if (countryRegions[i,'GEO3'] =='Australia and New Zealand'){
data_to_map[i,1]<-      .19
}
if (countryRegions[i,'GEO3'] == 'Central Asia'){
data_to_map[i,1]<-
.17
}
if (countryRegions[i,'GEO3'] == 'NW Pacific and East Asia'){
data_to_map[i,1]<-
.23
}
if (countryRegions[i,'GEO3'] == 'Eastern Europe' | countryRegions[i,'GEO3'] == 'Central Europe'){
data_to_map[i,1]<-
.11
}
if (countryRegions[i,'GEO3'] == 'Caribbean' | countryRegions[i,'GEO3'] == 'Meso-America'|
countryRegions[i,'GEO3'] == 'South America'){
data_to_map[i,1]<-
.14
}
if (countryRegions[i,'GEO3'] == 'North Africa'){
data_to_map[i,1]<-
-.49
}
if (countryRegions[i,'GEO3'] == 'Canada'|
countryRegions[i,'GEO3'] == 'US'){
data_to_map[i,1]<-
.29
}
if (countryRegions[i,'GEO3'] == 'Southeast Asia'){
data_to_map[i,1]<-
.29
}
if (countryRegions[i,'GEO3'] == 'South Asia'){
data_to_map[i,1]<-
.13
}
if (countryRegions[i,'GEO3'] == 'Southern Africa'|
countryRegions[i,'GEO3'] == 'Eastern Africa'|
countryRegions[i,'GEO3'] == 'Central Africa'|
countryRegions[i,'GEO3'] == 'Western Africa'| countryRegions[i,'GEO3'] == 'Western Indian Ocean'|
countryRegions[i,'ADMIN'] == 'South Sudan'){
data_to_map[i,1]<-
.09
}
if (countryRegions[i,'GEO3'] == 'Mashriq'|countryRegions[i,'GEO3'] == 'Arabian Peninsula'){
data_to_map[i,1]<-
-.01
}
if (countryRegions[i,'GEO3'] == 'Western Europe'){
data_to_map[i,1]<-
.06
}
if (countryRegions[i,'ADMIN'] == 'United Kingdom' | countryRegions[i,'ADMIN'] == 'Iceland'|
countryRegions[i,'ADMIN'] == 'Ireland' | countryRegions[i,'ADMIN'] == 'Finland'|
countryRegions[i,'ADMIN'] == 'Norway' | countryRegions[i,'ADMIN'] == 'Sweden'|
countryRegions[i,'ADMIN'] == 'Denmark' | countryRegions[i,'ADMIN'] == 'Estonia'|
countryRegions[i,'ADMIN'] == 'Latvia' | countryRegions[i,'ADMIN'] == 'Lithuania'){
data_to_map[i,1]<-
.23
}
if (countryRegions[i,'ADMIN'] == 'Spain' | countryRegions[i,'ADMIN'] == 'Portugal'|
countryRegions[i,'ADMIN'] == 'Slovenia' | countryRegions[i,'ADMIN'] == 'Croatia'|
countryRegions[i,'ADMIN'] == 'Andora' | countryRegions[i,'ADMIN'] == 'San Marino'|
countryRegions[i,'ADMIN'] == 'Vatican' | countryRegions[i,'ADMIN'] == 'Italy'|
countryRegions[i,'ADMIN'] == 'Malta' | countryRegions[i,'ADMIN'] == 'Republic of Serbia'|
countryRegions[i,'ADMIN'] == 'Greece' | countryRegions[i,'ADMIN'] == 'Albania'|
countryRegions[i,'ADMIN'] == 'Montenegro'| countryRegions[i,'ADMIN'] == 'Bosnia and Herzegovina'|
countryRegions[i,'ADMIN'] == 'Macedonia'|countryRegions[i,'ADMIN'] == 'Kosovo'){
data_to_map[i,1]<-
.03
}
}
# merge
df_to_map <- data.frame(
Country = countryRegions$ISO3,
Data = data_to_map
)
# map draw
sPDF <- joinCountryData2Map(df_to_map,
joinCode = 'ISO3',
nameJoinColumn = 'Country')
colourPalette <- brewer.pal(5,'RdPu')
mapCountryData(sPDF,nameColumnToPlot = 'Data',
catMethod='pretty', colourPalette=colourPalette,
mapTitle ='Acceptance of Sugar Relationships in Older Men and Women (ASR-OMWS) ')
mapCountryData(sPDF,nameColumnToPlot = 'Data',
catMethod='pretty', colourPalette=colourPalette,
mapTitle ='Cohen\'s D of ASR-YWMS - ASR-OWMS')
library(lordif)
load("~/Documents/Research/bDIT/MI/test.RData")
# plots
plot(now[[1]], mfrow=c(3,3
))
# plots
plot(now[[1]], mfrow=c(3,3
))
?plot.lordif.MC
?plog.lordif
?plot.lordif
?plot.lordif.MC
# plots
# gender
plot(now[[1]], mfrow=c(3,3
))
# plots
# gender
plot(now[[1]], mfrow=c(3,3
))
?plot.lordif.MC
# plots
# gender
plot(now[[1]], mfrow=c(3,3, width=4   ))
# plots
# gender
plot(now[[1]], mfrow=c(3,3 ), width=4  )
# plots
# gender
plot(now[[1]], mfrow=c(3,3 ), width=10  )
# plots
# gender
plot(now[[1]], mfrow=c(3,3 ), width=10, height=30  )
# plots
# gender
plot(now[[1]], mfrow=c(3,3 ), width=10, height=30  )
?plot
# plots
# gender
plot(now[[1]], mfrow=c(3,3 ), asp=1  )
# plots
# gender
plot(now[[1]], mfrow=c(3,3 ), asp=2  )
# plots
# gender
plot(now[[1]], mfrow=c(3,3 ), asp=1  )
# plots
# gender
plot(now[[1]], mfrow=c(3,3 ))
# plots
# gender
plot(now[[1]], mfrow=c(3,4 ))
# plots
# gender
plot(now[[1]], mfrow=c(4,3 ))
# plots
# gender
plot(now[[1]], mfrow=c(3,3 ))
# plots
# gender
plot(now[[1]], mfrow=c(3,3 ),graphics.off())
# plots
# gender
plot(now[[1]], mfrow=c(3,3 ),graphics.off(),height=10)
# plots
# gender
plot(now[[1]], mfrow=c(3,3 ),graphics.off(),height=10)
# plots
# gender
plot(now[[1]], mfrow=c(3,3 ),graphics.off(),height=10)
plot(now[[2]], mfrow=c(3,3),graphics.off())
plot(now[[3]], mfrow=c(3,3),graphics.off())
# politics
plot(now[[4]], mfrow=c(3,3),graphics.off())
plot(now[[5]], mfrow=c(3,3),graphics.off())
plot(now[[6]], mfrow=c(3,3),graphics.off())
# religion
plot(now[[7]], mfrow=c(3,3),graphics.off())
plot(now[[8]], mfrow=c(3,3),graphics.off())
plot(now[[9]], mfrow=c(3,3),graphics.off())
library(lavaan)
install.packages('lavaan')
install.packages("lavaan")
library(lavaan)
library(psychonetrics)
install.packages('psychonetrics')
install.packages("psychonetrics")
library(psychonetrics)
library(lvnet)
install.packages('OpenMx')
install.packages("OpenMx")
install.packages("OpenMx")
install.packages("OpenMx")
cpp_BFGS
cpp_BFGSlibrary(plyr        )
library(plyr        )
library(psych)
library(expss)
library(dplyr)
library(lavaan)
library(psychonetrics)
library(lvnet)
load("~/Documents/Research/bDIT/Network_test/Untitled.RData")
train.rnm.test.dist <- prune(modelsearch(stepup(prune(
runmodel(setoptimizer(
lrnm(data=train,lambda=lvmodel1$lambda,
estimator='FIML', omega_epsilon='full'),optimizer='default'
)
)))),adjust='fdr')
train.rnm.test.dist
rnm.test.dist <- setoptimizer(lrnm(data=testdata,lambda=lvmodel1$lambda,
estimator='FIML', omega_epsilon='full'),optimizer='default')
rnm.test.dist <- rnm.test.dist %>% runmodel
rnm.test.dist
rnm.test.dist <- setoptimizer(lrnm(data=testdata,lambda=lvmodel1$lambda,
estimator='FIML', omega_epsilon='full'),optimizer='default')
rnm.test.dist <- rnm.test.dist %>% runmodel( bounded=F)
rnm.test.dist
fit(rnm.test.dist)
?setoptimizer
rnm.test.dist <- setoptimizer(lrnm(data=testdata,lambda=lvmodel1$lambda,
estimator='FIML', omega_epsilon='full'),optimizer='nlminb')
rnm.test.dist
rnm.test.dist <- rnm.test.dist %>% runmodel( bounded=F)
rnm.test.dist
rnm.test.dist <- setoptimizer(lrnm(data=testdata,lambda=lvmodel1$lambda,
estimator='FIML', omega_epsilon='full'),optimizer='cpp_Nelder-Mead')
rnm.test.dist <- rnm.test.dist %>% runmodel( bounded=F)
rnm.test.dist
# bDIT test
model.story <- '
Ps =~ Q116 + Q132 + Q133 + Q134 + Q135 + Q136 + Q137 + Q138 +
Q139 + Q140 + Q141 + Q142 + Q143 + Q144 + Q145 + Q146 +
Q147 + Q148 + Q149 + Q150+
Q151 + Q152 + Q153 + Q154'
fit.story <- cfa(model.story,data=DATA,estimator='MLR')
# data extract
test1 <- lavPredict(fit.story,append.data = T)
testnames1 <- colnames(test1)[2:length(colnames(test1))]
testdata1 <- DATA[,testnames1]
lvmodel2<-lav2lvnet(model.story,data=testdata1)
lvmodel2$lambda[is.na(lvmodel2$lambda)]<-1
for.lambda<-data.frame(lvmodel2$lambda)
colnames(for.lambda)<-'Ps'
rnm.test.dist1 <- prune(modelsearch(stepup(prune(
runmodel(setoptimizer(
rnm(data=testdata1,lambda=data.matrix(for.lambda),
estimator='FIML', omega_epsilon='full'),optimizer='default'
)
)))),adjust='fdr')
rnm.test.dist1 <- rnm(data=testdata1,lambda=data.matrix(for.lambda),
estimator='FIML', omega_epsilon='full')
rnm.test.dist1<- runmodel(rnm.test.dist1)
rnm.test.dist1
library(lavaan)
sessionInfo()
install.packages('lavaan')
install.packages("lavaan")
install.packages("lavaan")
80+54+57
60+70+64+80+57
158+173
158/331
100/191
34/54
13+110
13/(13+110)
110/(13+110)
80/95
load("~/Documents/GitHub/COVIDiSTRESS2_Stress/R1/Big_Picture/big.res.RData")
library(brms)
bf.pss.2.0
bf.pss.2.0
bf.pss.2.0 <- bayes_factor(pss.2,pss.0,log=T)
bf.pss.2.0
# all in one
library(psych)
library(BayesFactor)
library(doMC)
bf.pss.2.1
bf.pss.2.0
# bf
bf.pss.2.0 <- bayes_factor(pss.2,pss.0,log=T)
install.packages('brms')
install.packages("brms")
install.packages("brms")
library(brms)
bf.pss.2.1 <- bayes_factor(pss.2,pss.1,log=T)
setwd("~/Documents/GitHub/Explore_Mixed_Models/Tests")
library(brms)
load("~/Documents/GitHub/Explore_Mixed_Models/Tests/test_trust.RData")
bf.aic
bf.bic
bf.full
load("~/Documents/GitHub/Explore_Mixed_Models/Tests/stress_test.RData")
bf.aic
bf.bic
bf.full
load("~/Documents/GitHub/Explore_Mixed_Models/Tests/test_vaccine.RData")
bf.bic
10123.59371 - 10121.52197
load("~/Documents/GitHub/Explore_Mixed_Models/Tests/stress_test.RData")
head(test.exp.aic)
